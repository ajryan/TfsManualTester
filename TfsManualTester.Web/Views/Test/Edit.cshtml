@using System.Web.Optimization
@{
    ViewBag.Title = "Edit Test";
}

@section styles 
{
    @Styles.Render("~/Content/TestEdit.css")
}

@section scripts
{
    @Scripts.Render(
        "~/Scripts/jquery.autoresize.js",
        "~/Scripts/Views/TestEdit.js")

    <script>
        $(document).ready(function() {
            var testCase = @Html.Raw(ViewBag.TestJson);
            TfsManualTester.TestCaseEditor.Start(testCase);
     });
    </script>
}

<div class="row-fluid">
    <div class="span12"><h2>Edit Test</h2></div>
</div>

<div class="row-fluid">
    <form class="span12 form-inline">
        @*TODO: dropdown*@
        <input data-bind="value: TeamProject" id="teamProject" name="teamProject" type="text" class="initial-focus" placeholder="Team Project" required />
        <input data-bind="value: TestCaseId" id="testCaseId" name="testCaseId" type="text" placeholder="Test Case Id" required />
        <button id="loadTestCaseBtn" type="submit" data-url="@Url.Action("Load")" class="btn btn-primary">Load</button>
    </form>
</div>

<div class="row-fluid">
    <div data-bind="visible: ErrorMessage" class="span12 alert alert-error" style="display: none">
        <span data-bind="text: ErrorMessage"/>
    </div>
</div>

@*TODO: template to avoid initial appear/disappear*@
<div class="row-fluid">
    <form data-bind="visible: TestSteps().length > 0, foreach: TestSteps" class="span12">
        <div class="controls">
            <span data-bind="text: $index() + 1" class="span1 test-step"></span>
            <textarea data-bind="value: Title" wrap="off" class="span6 test-step"></textarea>
            <textarea data-bind="value: Expected" wrap="off" class="span5 test-step"></textarea>
        </div>
    </form>
</div>